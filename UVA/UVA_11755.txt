A cyclic DP problem 
	For knowledge, review 3 videos: https://www.youtube.com/watch?v=M4yPThuiwBs&index=28&list=PLPt2dINI2MIattDutu7IOAMlUuLeN8k2p

===

1) It is probability, after some depth, returned computed values will be very low, hence useless calls
	
	Depth limit? Secure yourself. Use the biggest possible according to your dp consumed memory

	https://ideone.com/a147XD
	https://github.com/MedoN11/CompetitiveProgramming/blob/master/UVA/11755.cpp
	https://github.com/liuq901/code/blob/master/UVA/uv_11755.cpp

2) Indirect cycles => just arrange the reccurance calls as a system of linear equations and solve
	A state is (x, y) = 21x21 variables
	reasonable variables to fit in Gaussian, but handle the sparsity of the matrix

3) Can we do a dp that still handle the special cycle case?
	Most probably yes

4) Can we do a more adhock dp handling?
	https://github.com/ishassan/ProblemSolving/blob/master/UVa/11755%20-%20Table%20Tennis.cpp
	Mido: This solution is DP without cycles..Also I understand what he's doing, I think some part in his base case is wrong or don't make sense to me

===
Mohamed Nasser Notes: Special cases that might cause WA :
	1- Judge might give empty lines instead of WLWLWLWL.
	2- If the probability of winning is 1.0, but you lose, this case is invalid. :)
